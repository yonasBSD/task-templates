---
# https://taskfile.dev

version: '3'

vars:

tasks:

  encrypt:
    desc: "Encrypt a folder with age. Arguments: DIR|D=dir_path (*)"
    summary: |
      [AGE] Encrypt a folder with age.
      Usage: task age:encrypt DIR|D=<directory_path>

      Arguments:
        DIR | D  Directory to encrypt (required)

      Requirements:
        - age
    vars:
      DIR: '{{.DIR | default .D}}'
    cmds:
      - if [ ! -f "{{.DIR}}.tar" ]; then tar cf "{{.DIR}}.tar" "{{.DIR}}/"; fi
      - |
        if tar tf "{{.DIR}}.tar" &> /dev/null; then
          echo "Tar archive {{.DIR}}.tar created successfully!"
        else
          echo "Error creating Tar archive {{.DIR}}.tar" && exit 1
        fi
      - age --passphrase "{{.DIR}}.tar" > "{{.DIR}}.tar.age"
      - rm -f "{{.DIR}}.tar"
    preconditions:
      - sh: command -v age
        msg: "age is not installed"
      - sh: test -n "{{.DIR}}"
        msg: "DIR|D argument is required"
      - sh: (! test -f "{{.DIR}}.tar.age" && ! test -f "{{.D}}.tar.age")
        msg: "File {{.DIR}}.tar.age already exists!"
    interactive: true
    silent: true

  decrypt:
    desc: "Decrypt a folder with age. Arguments: NAME|N=filename (*)"
    summary: |
      [AGE] Decrypt a folder with age.
      Usage: task age:decrypt NAME|N=<filename>

      Arguments:
        NAME | N  File name without extension tar.age (required)

      Requirements:
        - age
    vars:
      NAME: '{{.NAME | default .N}}'
    cmds:
      - if [ ! -f "{{.NAME}}.tar" ]; then age --decrypt "{{.NAME}}.tar.age" > "{{.NAME}}.tar"; fi
      - echo "File {{.NAME}} decrypted successfully!"
      - tar xf "{{.NAME}}.tar"
      - rm -f "{{.NAME}}.tar"
    preconditions:
      - sh: command -v age
        msg: "age is not installed"
      - sh: test -n "{{.NAME}}"
        msg: "NAME|N argument is required"
      - sh: (! test -d "{{.NAME}}" && ! test -d "{{.N}}")
        msg: "Directory {{.NAME}} already exists!"
    interactive: true
    silent: true
