---
# https://taskfile.dev

version: '3'

vars:
  IMAGE_DEFAULT: debian:latest
  IMAGE_NODE: node:lts-bullseye

tasks:

  commit-signed:
    desc: "[GIT] Signed commit: KEY_PATH|K=key_full_path MESSAGE|M=message [PULL|P=n|N] (*)"
    summary: |
      [GIT] Signed commit.
      Usage: task git:commit KEY_PATH|K=<key_full_path> MESSAGE|M=<message> [PULL|P=<n|N>]

      Prerequistes:
        - Run command: git config user.signingkey XXXX
        - Run command: git config commit.gpgsign true

      Arguments:
       KEY_PATH | K Absolute path to the private key file (required)
       MESSAGE | M  Commit message (required)
       PULL | P     Pull docker image (optional, by default yes)
    vars:
      KEY_MOUNT_POINT: /Private
      SRC_MOUNT_POINT: /data
      KEY_PATH: '{{default .K .KEY_PATH}}'
      MESSAGE: '{{default .M .MESSAGE}}'
      PULL: '{{default .P .PULL}}'
      KEY_PATH_DIR:
        sh: dirname "{{.KEY_PATH}}"
      KEY_NAME:
        sh: basename "{{.KEY_PATH}}"
    cmds:
      - if [ "{{.PULL}}" != "n" ] && [ "{{.PULL}}" != "N" ]; then docker pull "{{.IMAGE_DEFAULT}}"; fi
      - docker run -d --name commit -v "{{.KEY_PATH_DIR}}:{{.KEY_MOUNT_POINT}}" -v $(pwd):"{{.SRC_MOUNT_POINT}}" -w "{{.SRC_MOUNT_POINT}}" "{{.IMAGE_DEFAULT}}" sleep infinity
      - defer: echo "Waiting for the container to stop..." && docker stop commit && docker rm commit
      - docker exec -it commit /bin/sh -c 'apt-get update && apt-get -y install gnupg2 && gpg --import "{{.KEY_MOUNT_POINT}}/{{.KEY_NAME}}"'
      - docker exec -it commit /bin/sh -c 'export GPG_TTY=$(tty); git commit -m "{{.MESSAGE}}"'
      - echo "Signed commit succeeded!"
    preconditions:
      - sh: test -n "{{.KEY_PATH}}" || test -n "{{.K}}"
        msg: "KEY_PATH|K argument is required"
      - sh: test -n "{{.MESSAGE}}" || test -n "{{.M}}"
        msg: "MESSAGE|M argument is required"
    silent: true

  commitizen:
    desc: "[GIT] Signed commit with Commitizen: KEY_PATH|K=key_full_path [PULL|P=n|N] (*)"
    summary: |
      [GIT] Signed commit with Commitizen.
      Usage: task git:commit KEY_PATH|K=<key_full_path> [PULL|P=<n|N>]

      Prerequistes:
        - Run command: git config user.signingkey XXXX
        - Run command: git config commit.gpgsign true

      Arguments:
       KEY_PATH | K Absolute path to the private key file (required)
       PULL | P Pull docker image (optional, by default yes)
    vars:
      KEY_MOUNT_POINT: /Private
      SRC_MOUNT_POINT: /data
      KEY_PATH: '{{default .K .KEY_PATH}}'
      PULL: '{{default .P .PULL}}'
      KEY_PATH_DIR:
        sh: dirname "{{.KEY_PATH}}"
      KEY_NAME:
        sh: basename "{{.KEY_PATH}}"
    cmds:
      - if [ "{{.PULL}}" != "n" ] && [ "{{.PULL}}" != "N" ]; then docker pull "{{.IMAGE_NODE}}"; fi
      - docker run -d --name node-commit -v "{{.KEY_PATH_DIR}}:{{.KEY_MOUNT_POINT}}" -v $(pwd):"{{.SRC_MOUNT_POINT}}" -w "{{.SRC_MOUNT_POINT}}" "{{.IMAGE_NODE}}" sleep infinity
      - defer: echo "Waiting for the container to stop..." && docker stop node-commit && docker rm node-commit
      - docker exec -it node-commit /bin/sh -c 'gpg --import "{{.KEY_MOUNT_POINT}}/{{.KEY_NAME}}"'
      - docker exec -it node-commit /bin/sh -c 'export GPG_TTY=$(tty); yarn commit'
      - echo "Signed commit succeeded!"
    preconditions:
      - sh: test -n "{{.KEY_PATH}}" || test -n "{{.K}}"
        msg: "KEY_PATH|K argument is required"
      - sh: test -f yarn.lock
        msg: "Error: Commitizen installation by Yarn is required."
    interactive: true
    silent: true
