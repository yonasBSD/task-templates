---
# https://taskfile.dev
# @description: A set of Ansible tasks.
# @tags: Ansible, docker, CLI
# @authors: FX Soubirou <soubirou@yahoo.fr>
# @file-raw: https://gitlab.com/op_so/task/task-templates/-/raw/main/Taskfile.d/ansible.yml
# @file-ui: https://gitlab.com/op_so/task/task-templates/-/blob/main/Taskfile.d/ansible.yml
# @home: https://gitlab.com/op_so/task/task-templates
# @links: [Ansible](https://www.ansible.com/)
# @license: MIT
# @status: stable
# @deprecated-tasks:

version: '3'

vars:
  IMAGE_ANSIBLE: jfxs/ansible  # Default Ansible image
  DOCKER_RUN_OPTS: ""  # Optional Docker options for docker run command

tasks:

  command:
    desc: "Run an Ansible command. Arguments: CMD|C=\"ansible --version\" [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N>] (*)"
    summary: |
      [ANSIBLE] Run an Ansible command.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:command CMD|C=<ansible_command> [IMG|I=<docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
        CMD  | C:  Ansible command to run (required)
        IMG  | I:  Docker Ansible image to use (optional, by default {{.IMAGE_ANSIBLE}})
        PULL | P:  Pull docker image (optional, by default yes)

      Requirements:
        - ansible or docker
    vars:
      CMD: '{{.CMD | default .C}}'
      IMG: '{{.IMG | default .I}}'
      PULL: '{{.PULL | default .P}}'
    cmds:
      - task: exec-local-docker-ansible
        vars: {CMD: "{{.CMD}}", IMG: "{{.IMG}}", PULL: "{{.PULL}}"}
    preconditions:
      - sh: test -n "{{.CMD}}"
        msg: "CMD|C argument is required"
    silent: true

  galaxy-install:
    desc: "Ansible Galaxy install requirements. Arguments: REQ|R=\"provision/requirements.txt\" [FORCE|F=<y|Y>] [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N>] [PROXY|PX=http://url:port] (*)"
    summary: |
      [ANSIBLE] Ansible Galaxy install requirements.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:galaxy-install FILE|F=<file_path> [FORCE|F=<y|Y>] [IMG|I=<Docker_image:tag>] [PULL|P=<n|N>] [PROXY|PX=<proxy_url>]

      Arguments:
        REQ   | R:  Requirements file path (required)
        FORCE | F:  Force to install the last version of collections (optional, by default no)
        IMG   | I:  Docker Ansible image to use (optional, by default {{.IMAGE_ANSIBLE}})
        PULL  | P:  Pull docker image (optional, by default yes)
        PROXY | PX: Proxy (optional)

      Requirements:
        - ansible or docker
    vars:
      REQ: '{{.REQ | default .R}}'
      FORCE: '{{.FORCE | default .F}}'
      IMG: '{{.IMG | default .I}}'
      PULL: '{{.PULL | default .P}}'
      PROXY: '{{.PROXY | default .PX}}'
    cmds:
      - |
        if [ "{{.FORCE}}" = "Y" ] || [ "{{.F}}" = "y" ]; then
          if [ -z "{{.PROXY}}" ]; then
            task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="ansible-galaxy install --force -r {{.REQ}}"
          else
            task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="export http_proxy={{.PROXY}} && export https_proxy={{.PROXY}} && ansible-galaxy install --force -r {{.REQ}}"
          fi
        else
          if [ -z "{{.PROXY}}" ]; then
            task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="ansible-galaxy install -r {{.REQ}}"
          else
            task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="export http_proxy={{.PROXY}} && export https_proxy={{.PROXY}} && ansible-galaxy install -r {{.REQ}}"
          fi
        fi
    preconditions:
      - sh: test -n "{{.REQ}}"
        msg: "REQ|R argument is required"
    silent: true

  galaxy-publish:
    desc: "[ANSIBLE] Publish collection in Galaxy. Arguments: VERSION|V=1.2.3 NAMESPACE|N=jfx COLLECTION|C=metrics TOKEN|T=abcdefg... [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N>] (*)"
    summary: |
      [ANSIBLE] Publish collection in Galaxy.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:galaxy-publish FILE|F=<file_path> ACTION|A=<ENC|DEC|EDIT> [IMG|I=<Docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
        VERSION    | V:  Version of the collection (required)
        NAMESPACE  | N:  Namespace of the collection (required)
        COLLECTION | C:  Collection name (required)
        TOKEN      | T:  Galaxy token (required)
        IMG        | I:  Docker Ansible image to use (optional, by default {{.IMAGE_ANSIBLE}})
        PULL       | P:  Pull docker image (optional, by default yes)

      Requirements:
        - ansible or docker
    vars:
      VERSION: '{{.VERSION | default .V}}'
      NAMESPACE: '{{.NAMESPACE | default .N}}'
      COLLECTION: '{{.COLLECTION | default .C}}'
      TOKEN: '{{.TOKEN | default .T}}'
      DEFAULT_VERSION: 1.0.0
      ARG: '{{.ARG | default .A}}'
      IMG: '{{.IMG | default .I}}'
      PULL: '{{.PULL | default .P}}'
      CMD1: "cd {{.NAMESPACE}}/{{.COLLECTION}} && ansible-galaxy collection build"
      CMD2: "ansible-galaxy collection publish {{.NAMESPACE}}/{{.COLLECTION}}/{{.NAMESPACE}}-{{.COLLECTION}}-{{.VERSION}}.tar.gz --token {{.TOKEN }}"
    cmds:
      - cp -f README.md {{.NAMESPACE}}/{{.COLLECTION}}/README.md
      - defer: rm -f {{.NAMESPACE}}/{{.COLLECTION}}/README.md
      - sed -i.bu 's/^\(version:\).*/\1 {{.VERSION}}/' {{.NAMESPACE}}/{{.COLLECTION}}/galaxy.yml
      - defer: sed -i.bu 's/^\(version:\).*/\1 {{.DEFAULT_VERSION}}/' {{.NAMESPACE}}/{{.COLLECTION}}/galaxy.yml && rm -f {{.NAMESPACE}}/{{.COLLECTION}}/galaxy.yml.bu
      - task: exec-local-docker-ansible
        vars: {CMD: "{{.CMD1}}", IMG: "{{.IMG}}", PULL: "{{.PULL}}"}
      - defer: rm -f {{.NAMESPACE}}/{{.COLLECTION}}/*.tar.gz
      - task: exec-local-docker-ansible
        vars: {CMD: "{{.CMD2}}", IMG: "{{.IMG}}", PULL: "{{.PULL}}"}
    preconditions:
      - sh: test -n "{{.VERSION}}"
        msg: "VERSION|V argument is required"
      - sh: test -n "{{.NAMESPACE}}"
        msg: "NAMESPACE|N argument is required"
      - sh: test -n "{{.COLLECTION}}"
        msg: "COLLECTION|C argument is required"
      - sh: test -n "{{.TOKEN}}"
        msg: "TOKEN|T argument is required"
    silent: true

  lint:
    desc: "Lint Ansible playbooks and roles. Arguments: ARG|A=\"--force-color --offline -p playbook.yml\" [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N>] (*)"
    summary: |
      [ANSIBLE] Lint Ansible playbook and roles.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:lint ARG|A=<arguments_list> [IMG|I=<Docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
        ARG  | A:  Arguments of the ansible-lint (required)
        IMG  | I:  Docker Ansible image to use (optional, by default {{.IMAGE_ANSIBLE}})
        PULL | P:  Pull docker image (optional, by default yes)

      Requirements:
        - ansible-lint or docker
    vars:
      ARG: '{{.ARG | default .A}}'
      IMG: '{{.IMG | default .I}}'
      PULL: '{{.PULL | default .P}}'
      CMD: "ansible-lint {{.ARG}}"
    cmds:
      - task: exec-local-docker-ansible
        vars: {CMD: "{{.CMD}}", IMG: "{{.IMG}}", PULL: "{{.PULL}}"}
    preconditions:
      - sh: test -n "{{.ARG}}"
        msg: "ARG|A argument is required"
    silent: true

  ping:
    desc: "Run Ansible ping. Arguments: ARG|A=\"-i inventory all\" [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N> ](*)"
    summary: |
      [ANSIBLE] Run Ansible ping.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:ping ARG|A=<arguments_list> [IMG|I=<Docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
        ARG  | A:  Arguments of the command to run (required)
        IMG  | I:  Docker Ansible image to use (optional, by default {{.IMAGE_ANSIBLE}})
        PULL | P:  Pull docker image (optional, by default yes)

      Requirements:
        - ansible or docker
    vars:
      ARG: '{{.ARG | default .A}}'
      IMG: '{{.IMG | default .I}}'
      PULL: '{{.PULL | default .P}}'
      CMD: "ansible {{.ARG}} -m ansible.builtin.ping"
    cmds:
      - task: exec-local-docker-ansible
        vars: {CMD: "{{.CMD}}", IMG: "{{.IMG}}", PULL: "{{.PULL}}"}
    preconditions:
      - sh: test -n "{{.ARG}}"
        msg: "ARG|A argument is required"
    silent: true

  playbook:
    desc: "Run Ansible playbook. Arguments: ARG|A=\"-i inventory playbook.yml\" [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N> ](*)"
    summary: |
      [ANSIBLE] Run Ansible playbook.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:playbook ARG|A=<arguments_list> [IMG|I=<Docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
        ARG  | A:  Arguments of the playbook to run (required)
        IMG  | I:  Docker Ansible image to use (optional, by default {{.IMAGE_ANSIBLE}})
        PULL | P:  Pull docker image (optional, by default yes)

      Requirements:
        - ansible or docker
    vars:
      ARG: '{{.ARG | default .A}}'
      IMG: '{{.IMG | default .I}}'
      PULL: '{{.PULL | default .P}}'
      CMD: "ansible-playbook {{.ARG}}"
    cmds:
      - task: exec-local-docker-ansible
        vars: {CMD: "{{.CMD}}", IMG: "{{.IMG}}", PULL: "{{.PULL}}"}
    preconditions:
      - sh: test -n "{{.ARG}}"
        msg: "ARG|A argument is required"
    silent: true

  ssh:
    desc: "SSH a host with Ansible inventory configuration. Arguments: FILE|F=inventory HOST|H=my_host (*)"
    summary: |
      [ANSIBLE] SSH a host from inventory options.
      Usage: task ansible:ssh FILE|F=<inventory_path> HOST|H=<nostname>

      Arguments:
        FILE | F:  Path to inventory file (required)
        HOST | H:  Hostname of server defined in inventory (required)

      Requirements:
        - ssh
    vars:
      FILE: '{{.FILE | default .F}}'
      HOST: '{{.HOST | default .H}}'
    cmds:
      - |
        line_host=$(grep "{{.HOST}}" "{{.FILE}}" | grep ansible_host | grep ansible_user | sort -u | head -n 1)
        if [ -z "$line_host" ]; then
          printf "\033[0;31mHost %s not found in file %s (ansible_host and ansible_user must also be defined) \033[0m\n" "{{.HOST}}" "{{.FILE}}" && exit 1
        fi
        user=$(echo "$line_host" | sed -e "s/.*ansible_user=//" -e "s/ .*//")
        ip=$(echo "$line_host" | sed -e "s/.*ansible_host=//" -e "s/ .*//")
        key=$(echo "$line_host" | sed -e "s/.*ansible_ssh_private_key_file=//" -e "s/ .*//")
        args_count=$(echo "$line_host" | grep "ansible_ssh_common_args=" | wc -l)
        if [ "$args_count" -gt "0" ]; then
          args=$(echo "$line_host" | sed -e "s/.*ansible_ssh_common_args=\"//" -e "s/\".*//")
        else
          args=""
        fi
        echo "Host: {{.HOST}}"
        echo "IP: $ip"
        echo "User: $user"
        echo "Key: $key"
        echo "SSH args: $args"
        ssh -i "$key" $args ${user}@${ip}
    preconditions:
      - sh: test -n "{{.FILE}}"
        msg: "FILE|F argument is required"
      - sh: test -n "{{.HOST}}"
        msg: "HOST|H argument is required"
      - sh: ! (test -f "{{.FILE}}")
        msg: "File {{.FILE}} not found"
    silent: true
    interactive: true

  vault:
    desc: "Operation on a file with Ansible Vault. Arguments: FILE|F=key.pem ACTION|A=ENC|DEC|EDIT [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N> ](*)"
    summary: |
      [ANSIBLE] Operation on a file with Ansible Vault.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:vault FILE|F=<file_path> ACTION|A=<ENC|DEC|EDIT> [IMG|I=<Docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
        FILE   | F:  Path of the file (required)
        ACTION | A:  Action ENC: encrypt, DEC: decrypt, EDIT: edit the file (required)
        IMG    | I:  Docker Ansible image to use (optional, by default {{.IMAGE_ANSIBLE}})
        PULL   | P:  Pull docker image (optional, by default yes)

      Requirements:
        - ansible or docker
    vars:
      FILE: '{{.FILE | default .F}}'
      ACTION: '{{.ACTION | default .A}}'
      IMG: '{{.IMG | default .I}}'
      PULL: '{{.PULL | default .P}}'
    cmds:
      - |
        if [ "{{.ACTION}}" = "ENC" ]; then
          task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="ansible-vault encrypt {{.FILE}}" && mv "{{.FILE}}" "{{.FILE}}.vault"
        elif [ "{{.ACTION}}" = "DEC" ]; then
          task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="ansible-vault decrypt {{.FILE}}"
        elif [ "{{.ACTION}}" = "EDIT" ]; then
          task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="ansible-vault edit {{.FILE}}" INTERACTIVE="Y"
        else
          printf "\033[0;31m[ERROR] Wrong ACTION: %s , possible actions: ENC|DEC|EDIT \033[0m\n" "{{.ACTION}}" && exit 1
        fi
    preconditions:
      - sh: test -n "{{.FILE}}"
        msg: "FILE|F argument is required"
      - sh: test -n "{{.ACTION}}"
        msg: "ACTION|A argument is required"
    silent: true
    interactive: true

  vault-variable:
    desc: "Operation on a variable with Ansible Vault. Arguments: VARIABLE|V=my_var SECRET|S=my_secret [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N> ](*)"
    summary: |
      [ANSIBLE] Operation on a variable with Ansible Vault.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:vault-variable VARIABLE|V=<variable_name> SECRET|S=<secret_value> [IMG|I=<Docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
        VARIABLE | V:  The variable name (required)
        SECRET   | S:  The secret to encrypt (required)
        IMG      | I:  Docker Ansible image to use (optional, by default {{.IMAGE_ANSIBLE}})
        PULL     | P:  Pull docker image (optional, by default yes)

      Requirements:
        - ansible or docker
    vars:
      VARIABLE: '{{.VARIABLE | default .V}}'
      SECRET: '{{.SECRET | default .S}}'
      IMG: '{{.IMG | default .I}}'
      PULL: '{{.PULL | default .P}}'
      CMD: "ansible-vault encrypt_string '{{.SECRET}}' --name '{{.VARIABLE}}'"
    cmds:
      - task: exec-local-docker-ansible
        vars: {CMD: "{{.CMD}}", IMG: "{{.IMG}}", PULL: "{{.PULL}}"}
    preconditions:
      - sh: test -n "{{.VARIABLE}}"
        msg: "VARIABLE|V argument is required"
      - sh: test -n "{{.SECRET}}"
        msg: "SECRET|S argument is required"
    silent: true
    interactive: true

  exec-local-docker-ansible:
    vars:
      IMG_D: '{{default .IMAGE_ANSIBLE .IMG}}'
    cmds:
      - |
        if (! test -n "{{.IMG}}") && (command -v ansible 2>&1 >/dev/null); then
          {{.CMD}}
        else
          if [ "{{.PULL}}" != "n" ] && [ "{{.PULL}}" != "N" ]; then docker pull "{{.IMG_D}}"; fi
          if [ "{{.INTERACTIVE}}" == "Y" ]; then
            docker run {{.DOCKER_RUN_OPTS}} -it --rm -v $(pwd):/ansible -w /ansible "{{.IMG_D}}" sh -c '{{.CMD}}'
          else
            docker run {{.DOCKER_RUN_OPTS}} -t --rm -v $(pwd):/ansible -w /ansible "{{.IMG_D}}" sh -c '{{.CMD}}'
          fi
        fi
    preconditions:
      - sh: command -v docker || command -v ansible
        msg: "ansible or docker are not installed"
      - sh: test -n "{{.CMD}}"
        msg: "CMD argument is required"
    silent: true
