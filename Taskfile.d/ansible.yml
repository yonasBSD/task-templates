---
# https://taskfile.dev

version: '3'

vars:
  IMAGE_ANSIBLE: jfxs/ansible

tasks:

  init-role:
    desc: "[ANSIBLE] Init an Ansible role: NAME|N=role_name [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N>] (*)"
    summary: |
      [ANSIBLE] Init an Ansible role.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:init-role NAME|N=role_name [IMG|I=<docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
       NAME | N  Ansible role name (required)
       IMG  | I  Docker Go image to use (optional, by default jfxs/ansible:latest)
       PULL | P  Pull docker image (optional, by default yes)
    vars:
      NAME: '{{default .N .NAME}}'
      IMG: '{{default .I .IMG}}'
      PULL: '{{default .P .PULL}}'
      CMD: ansible-galaxy init "{{.NAME}}"
    cmds:
      - task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="{{.CMD}}"
    preconditions:
      - sh: test -n "{{.NAME}}" || test -n "{{.N}}"
        msg: "NAME|N argument is required"
    silent: true

  galaxy-install:
    desc: "[ANSIBLE] Ansible Galaxy install requirements: FILE|F=\"provision/requirements.txt\" [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N>] (*)"
    summary: |
      [ANSIBLE] Ansible Galaxy install requirements.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:galaxy-install FILE|F=<file_path> [IMG|I=<Docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
       FILE | F  Requirements file path (required)
       IMG  | I  Docker Go image to use (optional, by default jfxs/ansible:latest)
       PULL | P  Pull docker image (optional, by default yes)
    vars:
      FILE: '{{default .F .FILE}}'
      IMG: '{{default .I .IMG}}'
      PULL: '{{default .P .PULL}}'
      CMD: "ansible-galaxy install -r {{.FILE}}"
    cmds:
      - task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="{{.CMD}}"
    preconditions:
      - sh: test -n "{{.FILE}}" || test -n "{{.F}}"
        msg: "FILE|F argument is required"
    silent: true

  lint:
    desc: "[ANSIBLE] Lint Ansible playbooks and roles: ARG|A=\"--force-color --offline -p playbook.yml\" [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N>] (*)"
    summary: |
      [ANSIBLE] Lint Ansible playbook and roles.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:lint ARG|A=<arguments_list> [IMG|I=<Docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
       ARG  | A  Arguments of the ansible-lint (required)
       IMG  | I  Docker Go image to use (optional, by default jfxs/ansible:latest)
       PULL | P  Pull docker image (optional, by default yes)
    vars:
      ARG: '{{default .A .NAME}}'
      IMG: '{{default .I .IMG}}'
      PULL: '{{default .P .PULL}}'
      CMD: "ansible-lint {{.ARG}}"
    cmds:
      - task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="{{.CMD}}"
    preconditions:
      - sh: test -n "{{.ARG}}" || test -n "{{.A}}"
        msg: "ARG|A argument is required"
    silent: true

  playbook:
    desc: "[ANSIBLE] Run Ansible playbook: ARG|A=\"-i inventory playbook.yml\" [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N> ](*)"
    summary: |
      [ANSIBLE] Run Ansible playbook.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:playbook ARG|A=<arguments_list> [IMG|I=<Docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
       ARG  | A  Arguments of the playbook to run
       IMG  | I  Docker Go image to use (optional, by default jfxs/ansible:latest)
       PULL | P  Pull docker image (optional, by default yes)
    vars:
      ARG: '{{default .A .NAME}}'
      IMG: '{{default .I .IMG}}'
      PULL: '{{default .P .PULL}}'
      CMD: "ansible-playbook {{.ARG}}"
    cmds:
      - task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="{{.CMD}}"
    preconditions:
      - sh: test -n "{{.ARG}}" || test -n "{{.A}}"
        msg: "ARG|A argument is required"
    silent: true

  exec-local-docker-ansible:
    vars:
      IMG_D: '{{default .IMAGE_ANSIBLE .IMG}}'
    cmds:
      - |
        if (! test -n "{{.IMG}}") && (command -v ansible-playbook 2>&1 >/dev/null); then
          {{.CMD}}
        else
          if ! command -v docker 2>&1 >/dev/null; then
            echo "docker and ansible are not installed!" && exit 1
          fi
          if [ "{{.PULL}}" != "n" ] && [ "{{.PULL}}" != "N" ]; then docker pull "{{.IMG_D}}"; fi
          docker run --rm -v $(pwd):/ansible -w /ansible "{{.IMG_D}}" sh -c '{{.CMD}}'
        fi
    preconditions:
      - sh: test -n "{{.CMD}}"
        msg: "CMD argument is required"
    silent: true
