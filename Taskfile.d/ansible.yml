---
# https://taskfile.dev

version: '3'

vars:
  IMAGE_ANSIBLE: jfxs/ansible

tasks:

  command:
    desc: "[ANSIBLE] Run an Ansible command. Arguments: CMD|C=\"ansible --version\" [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N>] (*)"
    summary: |
      [ANSIBLE] Run an Ansible command.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:command CMD|C=<ansible_command> [IMG|I=<docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
       CMD  | C  Ansible command to run (required)
       IMG  | I  Docker Ansible image to use (optional, by default jfxs/ansible:latest)
       PULL | P  Pull docker image (optional, by default yes)
    vars:
      CMD: '{{default .C .CMD}}'
      IMG: '{{default .I .IMG}}'
      PULL: '{{default .P .PULL}}'
    cmds:
      - task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="{{.CMD}}"
    preconditions:
      - sh: test -n "{{.CMD}}" || test -n "{{.C}}"
        msg: "CMD|C argument is required"
    silent: true

  galaxy-install:
    desc: "[ANSIBLE] Ansible Galaxy install requirements. Arguments: REQ|R=\"provision/requirements.txt\" [FORCE|F=<y|Y>] [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N>] (*)"
    summary: |
      [ANSIBLE] Ansible Galaxy install requirements.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:galaxy-install FILE|F=<file_path> [FORCE|F=<y|Y>] [IMG|I=<Docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
       REQ   | R  Requirements file path (required)
       FORCE | F  Force to install the last version of collections (optional, by default no)
       IMG   | I  Docker Ansible image to use (optional, by default jfxs/ansible:latest)
       PULL  | P  Pull docker image (optional, by default yes)
    vars:
      REQ: '{{default .R .REQ}}'
      FORCE: '{{default .F .FORCE}}'
      IMG: '{{default .I .IMG}}'
      PULL: '{{default .P .PULL}}'
    cmds:
      - |
        if [ "{{.FORCE}}" = "Y" ] || [ "{{.F}}" = "y" ]; then
          task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="ansible-galaxy install --force -r {{.REQ}}"
        else
          task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="ansible-galaxy install -r {{.REQ}}"
        fi
    preconditions:
      - sh: test -n "{{.REQ}}" || test -n "{{.R}}"
        msg: "REQ|R argument is required"
    silent: true

  lint:
    desc: "[ANSIBLE] Lint Ansible playbooks and roles. Arguments: ARG|A=\"--force-color --offline -p playbook.yml\" [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N>] (*)"
    summary: |
      [ANSIBLE] Lint Ansible playbook and roles.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:lint ARG|A=<arguments_list> [IMG|I=<Docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
       ARG  | A  Arguments of the ansible-lint (required)
       IMG  | I  Docker Ansible image to use (optional, by default jfxs/ansible:latest)
       PULL | P  Pull docker image (optional, by default yes)
    vars:
      ARG: '{{default .A .NAME}}'
      IMG: '{{default .I .IMG}}'
      PULL: '{{default .P .PULL}}'
      CMD: "ansible-lint {{.ARG}}"
    cmds:
      - task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="{{.CMD}}"
    preconditions:
      - sh: test -n "{{.ARG}}" || test -n "{{.A}}"
        msg: "ARG|A argument is required"
    silent: true

  ping:
    desc: "[ANSIBLE] Run Ansible ping. Arguments: ARG|A=\"-i inventory all\" [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N> ](*)"
    summary: |
      [ANSIBLE] Run Ansible ping.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:ping ARG|A=<arguments_list> [IMG|I=<Docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
       ARG  | A  Arguments of the command to run (required)
       IMG  | I  Docker Ansible image to use (optional, by default jfxs/ansible:latest)
       PULL | P  Pull docker image (optional, by default yes)
    vars:
      ARG: '{{default .A .NAME}}'
      IMG: '{{default .I .IMG}}'
      PULL: '{{default .P .PULL}}'
      CMD: "ansible {{.ARG}} -m ansible.builtin.ping"
    cmds:
      - task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="{{.CMD}}"
    preconditions:
      - sh: test -n "{{.ARG}}" || test -n "{{.A}}"
        msg: "ARG|A argument is required"
    silent: true

  playbook:
    desc: "[ANSIBLE] Run Ansible playbook. Arguments: ARG|A=\"-i inventory playbook.yml\" [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N> ](*)"
    summary: |
      [ANSIBLE] Run Ansible playbook.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:playbook ARG|A=<arguments_list> [IMG|I=<Docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
       ARG  | A  Arguments of the playbook to run (required)
       IMG  | I  Docker Ansible image to use (optional, by default jfxs/ansible:latest)
       PULL | P  Pull docker image (optional, by default yes)
    vars:
      ARG: '{{default .A .NAME}}'
      IMG: '{{default .I .IMG}}'
      PULL: '{{default .P .PULL}}'
      CMD: "ansible-playbook {{.ARG}}"
    cmds:
      - task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="{{.CMD}}"
    preconditions:
      - sh: test -n "{{.ARG}}" || test -n "{{.A}}"
        msg: "ARG|A argument is required"
    silent: true

  vault:
    desc: "[ANSIBLE] Operation on a file with Ansible Vault. Arguments: FILE|F=key.pem ACTION|A=ENC|DEC|EDIT [IMG|I=jfxs/ansible:latest] [PULL|P=<n|N> ](*)"
    summary: |
      [ANSIBLE] Operation on a file with Ansible Vault.
      If Ansible command is in the path and IMG/I argument is not set, the local Ansible command is executed,
      otherwise an Ansible Docker image is used.
      Usage: task ansible:vault FILE|F=<file_path> ACTION|A=<ENC|DEC|EDIT> [IMG|I=<Docker_image:tag>] [PULL|P=<n|N>]

      Arguments:
       FILE   | F  Path of the file (required)
       ACTION | F  Action ENC: encrypt, DEC: decrypt, EDIT: edit the file (required)
       IMG    | I  Docker Ansible image to use (optional, by default jfxs/ansible:latest)
       PULL   | P  Pull docker image (optional, by default yes)
    vars:
      FILE: '{{default .F .FILE}}'
      ACTION: '{{default .A .ACTION}}'
      IMG: '{{default .I .IMG}}'
      PULL: '{{default .P .PULL}}'
    cmds:
      - |
        if [ "{{.ACTION}}" = "ENC" ]; then
          task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="ansible-vault encrypt {{.FILE}}" && mv "{{.FILE}}" "{{.FILE}}.vault"
        elif [ "{{.ACTION}}" = "DEC" ]; then
          task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="ansible-vault decrypt {{.FILE}}"
        elif [ "{{.ACTION}}" = "EDIT" ]; then
          task ansible:exec-local-docker-ansible IMG="{{.IMG}}" PULL="{{.PULL}}" CMD="ansible-vault edit {{.FILE}}" INTERACTIVE="Y"
        else
          printf "\033[0;31m[ERROR] Wrong ACTION: %s , possible actions: ENC|DEC|EDIT \033[0m\n" "{{.ACTION}}" && exit 1
        fi
    preconditions:
      - sh: test -n "{{.FILE}}" || test -n "{{.F}}"
        msg: "FILE|F argument is required"
      - sh: test -n "{{.ACTION}}" || test -n "{{.A}}"
        msg: "ACTION|A argument is required"
    silent: true
    interactive: true

  exec-local-docker-ansible:
    vars:
      IMG_D: '{{default .IMAGE_ANSIBLE .IMG}}'
    cmds:
      - |
        if (! test -n "{{.IMG}}") && (command -v ansible 2>&1 >/dev/null); then
          {{.CMD}}
        else
          if [ "{{.PULL}}" != "n" ] && [ "{{.PULL}}" != "N" ]; then docker pull "{{.IMG_D}}"; fi
          if [ "{{.INTERACTIVE}}" == "Y" ]; then
            docker run -it --rm -v $(pwd):/ansible -w /ansible "{{.IMG_D}}" sh -c '{{.CMD}}'
          else
            docker run -t --rm -v $(pwd):/ansible -w /ansible "{{.IMG_D}}" sh -c '{{.CMD}}'
          fi
        fi
    preconditions:
      - sh: command -v docker || command -v ansible
        msg: "ansible or docker are not installed"
      - sh: test -n "{{.CMD}}"
        msg: "CMD argument is required"
    silent: true
