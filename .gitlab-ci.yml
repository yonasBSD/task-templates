---
include:
  - remote: 'https://gitlab.com/op_so/projects/gitlab-ci-templates/-/raw/main/templates/gitlab-release.gitlab-ci.yml'

variables:
  IMAGE_DEFAULT: alpine:latest
  IMAGE_DOCKER: docker:latest
  IMAGE_LYCHEE: lycheeverse/lychee:latest
  IMAGE_MARKDOWNLINT: davidanson/markdownlint-cli2
  IMAGE_NODE: node:lts-bookworm
  IMAGE_PRE_COMMIT: python:3-bookworm
  IMAGE_SHELLCHECK: koalaman/shellcheck:stable
  IMAGE_YAMLLINT: jfxs/ansible
  SERVICE_DOCKER_TAG: stable-dind

stages:
  - lint
  - tests
  - gitlab-release

lint-file:
  image: $IMAGE_DEFAULT
  stage: lint
  before_script:
    - apk --no-cache add curl file git ncurses
    - sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
    - task --version
    - echo -en  "[safe]\n  directory = $CI_PROJECT_DIR\n" >> ~/.gitconfig
    - git status
  script:
    - task lint:file

lint-pre-commit:
  image: $IMAGE_PRE_COMMIT
  stage: lint
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends curl git
    - sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
    - task --version
    - pip install pre-commit
    - pre-commit --version
  script:
    - task lint:pre-commit

lint-lychee:
  image:
    name: $IMAGE_LYCHEE
    entrypoint: [""]
  stage: lint
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends wget
    - sh -c "$(wget -qO - https://taskfile.dev/install.sh)" -- -d
    - ./bin/task --version
  script:
    - ./bin/task lint:lychee
  allow_failure: true

lint-markdown:
  image:
    name: $IMAGE_MARKDOWNLINT
    entrypoint: [""]
  stage: lint
  before_script:
    - sh -c "$(wget -qO - https://taskfile.dev/install.sh)" -- -d
    - ./bin/task --version
  script:
    - ./bin/task lint:markdown G="\"**/*.md\" \"#node_modules\" \"#.node_cache\""

lint-vale:
  image:
    name: $IMAGE_VALE
    entrypoint: [""]
  stage: lint
  before_script:
    - sh -c "$(wget -qO - https://taskfile.dev/install.sh)" -- -d
    - ./bin/task --version
    - ln -s /bin/vale /usr/local/bin/vale
  script:
    - ./bin/task lint:vale
  allow_failure: true

lint-yaml:
  image:
    name: $IMAGE_YAMLLINT
  stage: lint
  before_script:
    - sh -c "$(wget -qO - https://taskfile.dev/install.sh)" -- -d
    - ./bin/task --version
  script:
    - ./bin/task lint:yaml

lint-docker-dind:
  image:
    name: $IMAGE_DOCKER
  services:
    - docker:$SERVICE_DOCKER_TAG
  stage: tests
  before_script:
    - sh -c "$(wget -qO - https://taskfile.dev/install.sh)" -- -d
    - ./bin/task --version
  script:
    - ./bin/task lint:docker FILE="tests/lint/Dockerfile"

lint-lychee-dind:
  extends: lint-docker-dind
  script:
    - ./bin/task lint:lychee
  allow_failure: true

lint-markdown-dind:
  extends: lint-docker-dind
  script:
    - ./bin/task lint:markdown

lint-shell-dind:
  extends: lint-docker-dind
  script:
    - ./bin/task lint:shell FILES="tests/lint/*.sh"

lint-vale-dind:
  extends: lint-docker-dind
  script:
    - ./bin/task lint:vale

lint-yaml-dind:
  extends: lint-docker-dind
  script:
    - ./bin/task lint:yaml
