---
# https://taskfile.dev
#
# Do not edit this file, instead use Taskfile.project.yml.
#
version: '3'

vars:
  DIR_TASKFILES: "Taskfile.d"
  FILE_TASK_START: "task-start-{{.TASK}}.txt"
  TT_GIT_REPO: "https://gitlab.com/op_so/task/task-templates/-/raw/main"

includes:
  00:
    taskfile: "./Taskfile.project.yml"
    optional: true
# ansible:
#   taskfile: "./Taskfile.d/ansible.yml"
#   optional: true
# docker:
#   taskfile: "./Taskfile.d/docker.yml"
#   optional: true
# git:
#   taskfile: "./Taskfile.d/git.yml"
#   optional: true
# go:
#   taskfile: "./Taskfile.d/go.yml"
#   optional: true
# lint:
#   taskfile: "./Taskfile.d/lint.yml"
#   optional: true
# multipass-lite:
#   taskfile: "./Taskfile.d/multipass-lite.yml"
#   optional: true
# multipass:
#   taskfile: "./Taskfile.d/multipass.yml"
#   optional: true
# system:
#   taskfile: "./Taskfile.d/system.yml"
#   optional: true
# yarn:
#   taskfile: "./Taskfile.d/yarn.yml"
#   optional: true

tasks:

  10-t-activate:
    desc: "[CORE] Activate Tasks templates. Arguments: TEMPLATE|T=docker,git [FILE|F=Taskfile.dist.yml] (*)"
    summary: |
      [CORE] Activate Tasks templates.
      Usage: task [-t Taskfile.dist.yml] 10-t-activate TEMPLATE|T=<template1-name>,<template2-name> [FILE|F=Taskfile.dist.yml]

      Arguments:
       TEMPLATE | T List of the templates to activate separated by comma (required)
       FILE | F     Taskfile path (optional, by default Taskfile.yml)
    vars:
      TEMPLATE: '{{default .T .TEMPLATE}}'
      FILE: '{{default .F .FILE}}'
      FILE_DEFAULT: "Taskfile.yml"
      FILE_PATH: '{{default .FILE_DEFAULT .FILE}}'
    cmds:
      - mkdir -p "{{.DIR_TASKFILES}}"
      - |
        for t in $(echo "{{.TEMPLATE}}" | tr "," " "); do
          if ! grep -Fq "Taskfile.d/${t}.yml" "{{.FILE_PATH}}"
          then
            printf "\e[33m Warning: %s template does not exist.\033[0m Please upgrade your Taskfile.yml file!\n" "${t}"
          else
            sed -i.bu "/${t}:$/s/^#/ /" "{{.FILE_PATH}}"
            sed -i.bu "/${t}:$/{n;s/^#/ /;}" "{{.FILE_PATH}}"
            sed -i.bu "/${t}:$/{n;n;s/^#/ /;}" "{{.FILE_PATH}}"
            sed -i.bu "/TEMPLATE=${t}\.yml/s/# - task download-template/- task download-template/" "{{.FILE_PATH}}"
          fi
        done
      - defer: rm -f "{{.FILE_PATH}}".bu
    preconditions:
      - sh: test -n "{{.TEMPLATE}}" || test -n "{{.T}}"
        msg: "TEMPLATE|T argument is required"
    silent: true

  20-t-download:
    # TODO: Add optional proxy arguments
    desc: "[CORE] Download necessary resources."
    cmds:
      - date > {{.FILE_TASK_START}}
      - defer: rm -f {{.FILE_TASK_START}}
      - mkdir -p "{{.DIR_TASKFILES}}"
      # - task download-template TEMPLATE=ansible.yml
      # - task download-template TEMPLATE=docker.yml
      # - task download-template TEMPLATE=git.yml
      # - task download-template TEMPLATE=go.yml
      # - task download-template TEMPLATE=lint.yml
      # - task download-template TEMPLATE=multipass-lite.yml
      # - task download-template TEMPLATE=multipass.yml
      # - task download-template TEMPLATE=system.yml
      # - task download-template TEMPLATE=yarn.yml
      - echo "Download Start $(cat {{.FILE_TASK_START}}) - End $(date)"
    preconditions:
      - sh: command -v curl || command -v wget
        msg: "curl and wget are not installed"
    silent: true

  usage:
    desc: "[CORE] Show the usage of a task. Arguments: TSK|T=task-name [FILE|F=Taskfile.dist.yml] (*)"
    summary: |
      [CORE] Show the usage of a task.
      Usage: task [-t Taskfile.dist.yml] usage TSK|T=<task-name> [FILE|F=Taskfile.dist.yml]

      Arguments:
       TSK | T  Name of the task (required)
       FILE | F Taskfile path (optional, by default Taskfile.yml)
    vars:
      TSK: '{{default .T .TSK}}'
      FILE: '{{default .F .FILE}}'
      FILE_DEFAULT: "Taskfile.yml"
      FILE_PATH: '{{default .FILE_DEFAULT .FILE}}'
    cmds:
      - |
        if [ ! -f "{{.FILE_PATH}}" ]; then
          echo "{{.FILE_PATH}} does not exist!"
          exit 1
        fi
      - task -t "{{.FILE_PATH}}" --summary "{{.TSK}}" | sed '/^dependencies:$/,$d' | sed '/^commands:$/,$d'
    preconditions:
      - sh: test -n "{{.TSK}}" || test -n "{{.T}}"
        msg: "TSK|T argument is required"
    silent: true

  default:
    desc: "[CORE] List of available tasks. Arguments: [FILE|F=Taskfile.dist.yml] (*)"
    summary: |
      [CORE] Show the list of available tasks.
      Usage: task [-t Taskfile.dist.yml] [FILE|F=Taskfile.dist.yml]

      Arguments:
       FILE | F Taskfile path (optional, by default Taskfile.yml)
    vars:
      FILE: '{{default .F .FILE}}'
      FILE_DEFAULT: "Taskfile.yml"
      FILE_PATH: '{{default .FILE_DEFAULT .FILE}}'
      TASKS_LIST:
        sh: task --list -t "{{.FILE_PATH}}"
    cmds:
      - |
        {{ range $i, $line := .TASKS_LIST | splitLines -}}
          first_char="$(printf '%s' "{{ $line }}" | cut -c1)"
          if [ "$first_char" = "*" ]; then
             task=$(echo "{{ $line }}" | cut -d ' ' -f2)
             desc=$(echo "{{ $line }}" | sed -e "s/^\* $task//" | sed 's/^[[:space:]]*//g')
             printf "\e[32m%-25s \033[0m %s\n" "* $task" "$desc"
          else
            echo "{{ $line }}"
          fi
        {{ end -}}
      - echo ""
      - echo " (*) <task usage TSK=task-name> will show the usage of the task."
      - echo ""
    silent: true

  download-template:
    cmds:
      - |
        if [ -x "$(command -v curl)" ]; then
          curl --progress-bar -o "{{.DIR_TASKFILES}}/{{.TEMPLATE}}" "{{.TT_GIT_REPO}}/{{.DIR_TASKFILES}}/{{.TEMPLATE}}"
        else
          wget -cq -O "{{.DIR_TASKFILES}}/{{.TEMPLATE}}" "{{.TT_GIT_REPO}}/{{.DIR_TASKFILES}}/{{.TEMPLATE}}"
        fi
    preconditions:
      - sh: test -n "{{.TEMPLATE}}"
        msg: "TEMPLATE argument is required"
      - sh: command -v curl || command -v wget
        msg: "curl or wget are not installed"
    silent: true
